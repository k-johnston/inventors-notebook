## Being a storyteller

I have been looking at job postings recently, not only to apply for jobs, but also to learn what I need to work on to level up in my career. And the types of jobs I am looking at increasingly ask for me to be a good storyteller, on top of the core list of technical and social skills. 

It seems like companies are looking for a candidate who knows themselves well. I need to not only understand short- and long-term consequences, big- and small-picture, but I also need to really tell a good story, sell a good product, understand my own meta-narrative.

## Autofiction

It is an interesting parallel with a recent (current?) trend in literary fiction, autofiction. Writing about yourself as if you are your own fictional character. Making yourself get into fictitious situations that you lived through. Finding the themes of your life. It is a little more recent (current?) than an autobiography, because that feels like looking at everything and tallying up the register of what you have done with yourself. Autobiography is retirement. Autofiction feels more like working out the problems in the immediacy of having them. Being a storyteller in a specific role or as a career path feels like the professionalization of autofiction.

NaNoGenMo?

## Craft

And then I also think about how defensive coders and designers get about their work, or writers about theirs. If you look at it from the perspective of coding as art that is crafted to share information, of literature as programs to iterate through the human condition, it makes sense how emotional everything is. Writers and coders talk about their craft, their techniques. The higher the level of abstraction, the better it is / the more meaning is inherent in the work. Both camps even have a running argument about spaces: tabs vs. spaces and one vs. two spaces after the end of a period. 

If you think of websites as art, as a literary artform, then UIs and UX elements become tropes, themes, characterization. Setting, plot, characterization are just the prototypes, flows, and personas of books. There is so much in common that it is interesting to see them in conversation with each otherâ€¦ or you could even call it pair programming.
